version: "3"

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - monitoring

  # Example price_pusher service for Ethereum
  # price_pusher_ethereum:
  #   image: your-price-pusher-image:latest
  #   container_name: price_pusher_ethereum
  #   volumes:
  #     - ./config.evm.mainnet.json:/app/config.json
  #     - ./mnemonic:/app/mnemonic
  #   command: >
  #     node lib/index.js evm
  #     --config /app/config.json
  #     --mnemonic-file /app/mnemonic
  #     --metrics-port 9091
  #   ports:
  #     - "9091:9091"
  #   networks:
  #     - monitoring
  #   restart: unless-stopped

  # Example price_pusher service for Solana
  # price_pusher_solana:
  #   image: your-price-pusher-image:latest
  #   container_name: price_pusher_solana
  #   volumes:
  #     - ./config.solana.mainnet.json:/app/config.json
  #     - ./mnemonic:/app/mnemonic
  #   command: >
  #     node lib/index.js solana
  #     --config /app/config.json
  #     --mnemonic-file /app/mnemonic
  #     --metrics-port 9092
  #   ports:
  #     - "9092:9092"
  #   networks:
  #     - monitoring
  #   restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-storage:
